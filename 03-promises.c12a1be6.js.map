{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAkB3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAzBPR,EAAKe,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,GAAKC,OAAOd,EAAYe,OAAQF,IAC9CZ,EACEY,EACAC,OAAOhB,EAAWiB,QAAUF,EAAI,GAAKC,OAAOf,EAAUgB,QAErDC,MAAK,EAACd,SAAEA,EAAQC,MAAEA,MACjBV,EAAAwB,OAAOC,QAAQ,qBAAqBhB,QAAeC,UAEpDgB,OAAM,EAACjB,SAAEA,EAAQC,MAAEA,MAClBV,EAAAwB,OAAOG,QAAQ,oBAAoBlB,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  for (let i = 1; i <= Number(amountInput.value); i++) {\n    createPromise(\n      i,\n      Number(delayInput.value) + (i - 1) * Number(stepInput.value)\n    )\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","i","Number","value","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.c12a1be6.js.map"}